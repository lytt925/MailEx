{
  "openapi": "3.0.0",
  "info": {
    "title": "MailEx API",
    "version": "1.0.0",
    "description": "Swagger Docs for MailEx API"
  },
  "servers": [
    {
      "url": "http://localhost:4000/api/1.0"
    }
  ],
  "paths": {
    "/healthcheck": {
      "get": {
        "summary": "Healthcheck",
        "description": "Healthcheck",
        "tags": [
          "Healthcheck"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mail": {
      "get": {
        "tags": [
          "Mail"
        ],
        "summary": "Get user's mail",
        "description": "Get the user profile using access token",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "paging",
            "in": "query",
            "description": "Paging for request next page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user profile successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mails": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Mail"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "client error message",
                      "example": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "server error message",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Mail"
        ],
        "summary": "Get user's mail",
        "description": "Get the user profile using access token",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sender_id",
                  "receiver_id",
                  "subject",
                  "content"
                ],
                "properties": {
                  "sender_id": {
                    "type": "integer",
                    "example": 3,
                    "description": "Identifier for the sender of the mail."
                  },
                  "receiver_id": {
                    "type": "integer",
                    "example": 18,
                    "description": "Identifier for the receiver of the mail."
                  },
                  "subject": {
                    "type": "string",
                    "example": "頂樓風好大",
                    "maxLength": 50,
                    "description": "Subject of the mail."
                  },
                  "content": {
                    "type": "string",
                    "example": "最近，我感到壓力非常大，這影響了我的學習和日常生活。\n\n我發現當我站在學校的頂樓時，那裡的風特別大，似乎能帶走我心中的一部分重擔。站在那裡，我會深深地呼吸，試圖讓自己平靜下來。但是，即使是這樣的短暫逃避，也不能徹底解決我的壓力問題。\n  \n我認為我的壓力來源於學業負擔和對未來的不確定感。我努力學習，但有時候感覺無法跟上。我擔心自己的表現不足以滿足期望，這讓我感到焦慮和沮喪。\n\n我希望能和您談談，或許您能提供一些指導或建議來幫助我應對這些壓力。我非常尊重您的意見，並且相信您的經驗和知識可以幫助我找到解決問題的方法。\n",
                    "description": "Content of the mail."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "arrived",
                      "sending"
                    ],
                    "default": "draft",
                    "description": "Status of the mail."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create the mail successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing receiver id"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "server error message",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "description": "Create a new user using name, email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "email",
                  "password",
                  "provider"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "lytt925"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "ytli.tw@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "Password123"
                  },
                  "provider": {
                    "type": "string",
                    "enum": [
                      "native",
                      "facebook",
                      "google",
                      "line"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Access token"
                    },
                    "access_expired": {
                      "type": "string",
                      "description": "Access token expired time"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "User id"
                        },
                        "provider": {
                          "type": "string",
                          "description": "Authentication provider"
                        },
                        "username": {
                          "type": "string",
                          "description": "User name"
                        },
                        "email": {
                          "type": "string",
                          "description": "User email"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Client message",
                      "example": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Server message",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login user",
        "description": "Login user using email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "provider"
                ],
                "properties": {
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "Password123"
                  },
                  "provider": {
                    "type": "string",
                    "enum": [
                      "native",
                      "facebook",
                      "google",
                      "line"
                    ]
                  }
                },
                "oneOf": [
                  {
                    "required": [
                      "username"
                    ],
                    "properties": {
                      "username": {
                        "type": "string",
                        "example": "lytt925"
                      }
                    }
                  },
                  {
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string",
                          "description": "Access token"
                        },
                        "access_expired": {
                          "type": "string",
                          "description": "Access token expired time"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "User id"
                            },
                            "provider": {
                              "type": "string",
                              "description": "Authentication provider"
                            },
                            "username": {
                              "type": "string",
                              "description": "User name"
                            },
                            "email": {
                              "type": "string",
                              "description": "User email"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Client message",
                      "example": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Server message",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Mail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the Mail."
          },
          "sender_id": {
            "type": "integer",
            "example": 3,
            "description": "Identifier for the sender of the mail."
          },
          "receiver_id": {
            "type": "integer",
            "example": 18,
            "description": "Identifier for the receiver of the mail."
          },
          "subject": {
            "type": "string",
            "example": "頂樓風好大",
            "maxLength": 50,
            "description": "Subject of the mail."
          },
          "content": {
            "type": "string",
            "example": "最近，我感到壓力非常大，這影響了我的學習和日常生活。\n\n我發現當我站在學校的頂樓時，那裡的風特別大，似乎能帶走我心中的一部分重擔。站在那裡，我會深深地呼吸，試圖讓自己平靜下來。但是，即使是這樣的短暫逃避，也不能徹底解決我的壓力問題。\n  \n我認為我的壓力來源於學業負擔和對未來的不確定感。我努力學習，但有時候感覺無法跟上。我擔心自己的表現不足以滿足期望，這讓我感到焦慮和沮喪。\n\n我希望能和您談談，或許您能提供一些指導或建議來幫助我應對這些壓力。我非常尊重您的意見，並且相信您的經驗和知識可以幫助我找到解決問題的方法。\n",
            "description": "Content of the mail."
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "arrived",
              "sending"
            ],
            "default": "draft",
            "description": "Status of the mail."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the mail was created."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the mail was updated."
          },
          "sentAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the mail was sent."
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Mail",
      "description": "Mails API"
    }
  ]
}